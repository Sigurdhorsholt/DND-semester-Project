{"ast":null,"code":"// src/context/AuthContext.jsx\nimport React,{createContext,useEffect,useState}from'react';import axios from'axios';import{useNavigate}from'react-router-dom';import{jwtDecode}from'jwt-decode';import{jsx as _jsx}from\"react/jsx-runtime\";export const AuthContext=/*#__PURE__*/createContext();export const AuthProvider=_ref=>{let{children}=_ref;const[user,setUser]=useState(null);const[loading,setLoading]=useState(true);const navigate=useNavigate();useEffect(()=>{const token=localStorage.getItem(\"token\");if(token){axios.defaults.headers.common['Authorization']='Bearer '+token;setUser({token});}setLoading(false);},[]);const login=async(username,password)=>{try{const response=await axios.post(\"/api/auth/login\",{username,password});const token=response.data.token;console.log(\"response \"+response);console.log(\"response.data \"+response.data);console.log(\"response.data.token \"+response.data.token);console.log(\"token: \"+token);if(!token||typeof token!==\"string\"){throw new Error(\"Invalid token format\");}localStorage.setItem(\"token\",token);axios.defaults.headers.common['Authorization']='Bearer '+token;setUser({token});// Decode the token to get user claims\nconst decodedToken=jwtDecode(token);console.log(\"token: \"+decodedToken);const isAdmin=decodedToken.IsAdmin===\"1\";console.log(\"token: \"+isAdmin);if(isAdmin){navigate(\"/admin-dashboard\");}else{navigate(\"/user-dashboard\");}}catch(error){console.log(\"Login Failed: \",error);}};// Function to log out\nconst logout=()=>{localStorage.removeItem('token');delete axios.defaults.headers.common['Authorization'];setUser(null);navigate('/login');// Redirect to login page after logout\n};return/*#__PURE__*/_jsx(AuthContext.Provider,{value:{user,login,logout,loading},children:children});};","map":{"version":3,"names":["React","createContext","useEffect","useState","axios","useNavigate","jwtDecode","jsx","_jsx","AuthContext","AuthProvider","_ref","children","user","setUser","loading","setLoading","navigate","token","localStorage","getItem","defaults","headers","common","login","username","password","response","post","data","console","log","Error","setItem","decodedToken","isAdmin","IsAdmin","error","logout","removeItem","Provider","value"],"sources":["C:/Users/sigur/OneDrive/Skrivebord/Test/Solution2/api/client-app/src/context/AuthContext.jsx"],"sourcesContent":["// src/context/AuthContext.jsx\r\nimport React, {createContext, useEffect, useState} from 'react';\r\nimport axios from 'axios';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { jwtDecode } from 'jwt-decode';\r\n\r\n\r\n\r\nexport const AuthContext = createContext();\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n    const [user, setUser] = useState(null);\r\n    const [loading, setLoading] = useState(true);\r\n    const navigate = useNavigate();\r\n    \r\n    useEffect(() => {\r\n        const token = localStorage.getItem(\"token\");\r\n        if (token) {\r\n            axios.defaults.headers.common['Authorization'] = 'Bearer ' + token;\r\n            \r\n            setUser({token});\r\n        }\r\n        setLoading(false);\r\n    }, []);\r\n\r\n    \r\n    \r\n    const login = async (username, password) => {\r\n        try {\r\n            const response = await axios.post(\"/api/auth/login\", {\r\n                username,\r\n                password,\r\n            });\r\n            \r\n            const token = response.data.token;\r\n            \r\n            console.log(\"response \"+response)\r\n            console.log(\"response.data \"+response.data)\r\n            console.log(\"response.data.token \"+response.data.token)\r\n\r\n            console.log(\"token: \"+ token)\r\n\r\n\r\n\r\n            if (!token || typeof token !== \"string\") {\r\n                throw new Error(\"Invalid token format\");\r\n            }\r\n\r\n\r\n            localStorage.setItem(\"token\", token);\r\n            axios.defaults.headers.common['Authorization'] = 'Bearer ' + token;\r\n            setUser({token});\r\n\r\n            // Decode the token to get user claims\r\n            const decodedToken = jwtDecode(token);\r\n            \r\n            console.log(\"token: \" + decodedToken)\r\n\r\n            const isAdmin = decodedToken.IsAdmin === \"1\";\r\n            \r\n            console.log(\"token: \" + isAdmin)\r\n\r\n            \r\n\r\n            if (isAdmin) {\r\n                navigate(\"/admin-dashboard\");\r\n            } else\r\n            {\r\n                navigate(\"/user-dashboard\");\r\n            }\r\n            \r\n        }catch(error) {\r\n            console.log(\"Login Failed: \", error);\r\n        }\r\n        \r\n    }\r\n    // Function to log out\r\n    const logout = () => {\r\n        localStorage.removeItem('token');\r\n        delete axios.defaults.headers.common['Authorization'];\r\n        setUser(null);\r\n        navigate('/login'); // Redirect to login page after logout\r\n    };\r\n    \r\n    \r\n    \r\n    return (\r\n        <AuthContext.Provider value={{ user, login, logout, loading }}>\r\n            {children}\r\n        </AuthContext.Provider>\r\n    );\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}