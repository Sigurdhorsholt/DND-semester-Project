{"ast":null,"code":"// src/components/Navbar.jsx\nimport React,{useContext}from\"react\";import{Link}from\"react-router-dom\";import{AuthContext}from\"../context/AuthContext\";import{jsx as _jsx,Fragment as _Fragment,jsxs as _jsxs}from\"react/jsx-runtime\";const Navbar=()=>{const{user,logout,getDecodedToken}=useContext(AuthContext);// Get the user, logout, and getDecodedToken from AuthContext\nconst decodedToken=getDecodedToken();const isAdmin=(decodedToken===null||decodedToken===void 0?void 0:decodedToken.IsAdmin)===\"true\";// Check if IsAdmin is \"true\" in the decoded token\nconsole.log(\"from navbar: \"+isAdmin);return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsx(\"nav\",{className:\"p-4 bg-gray-100\",children:/*#__PURE__*/_jsxs(\"ul\",{className:\"flex space-x-4\",children:[/*#__PURE__*/_jsx(\"li\",{children:/*#__PURE__*/_jsx(Link,{to:\"/\",className:\"text-blue-500\",children:\"Home\"})}),user?/*#__PURE__*/_jsxs(_Fragment,{children:[isAdmin&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"li\",{children:/*#__PURE__*/_jsx(Link,{to:\"/user-dashboard\",className:\"text-blue-500\",children:\"User Dashboard\"})}),/*#__PURE__*/_jsx(\"li\",{children:/*#__PURE__*/_jsx(Link,{to:\"/admin-dashboard\",className:\"text-blue-500\",children:\"Admin Dashboard\"})})]}),/*#__PURE__*/_jsx(\"li\",{children:/*#__PURE__*/_jsx(Link,{to:\"/user-dashboard\",className:\"text-blue-500\",children:\"User Dashboard\"})}),/*#__PURE__*/_jsx(\"li\",{children:/*#__PURE__*/_jsx(Link,{to:\"/user-dashboard\",className:\"text-blue-500\",children:\"Profile\"})}),/*#__PURE__*/_jsx(\"li\",{children:/*#__PURE__*/_jsx(\"button\",{onClick:logout,className:\"text-red-500\",children:\"Log Out\"})})]}):/*#__PURE__*/_jsx(\"li\",{children:/*#__PURE__*/_jsx(Link,{to:\"/login\",className:\"text-blue-500\",children:\"Log In\"})})]})})});};export default Navbar;","map":{"version":3,"names":["React","useContext","Link","AuthContext","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","Navbar","user","logout","getDecodedToken","decodedToken","isAdmin","IsAdmin","console","log","children","className","to","onClick"],"sources":["C:/Users/sigur/OneDrive/Skrivebord/Test/Solution2/api/client-app/src/Components/Navbar.jsx"],"sourcesContent":["// src/components/Navbar.jsx\r\nimport React, { useContext } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { AuthContext } from \"../context/AuthContext\";\r\n\r\nconst Navbar = () => {\r\n  const { user, logout, getDecodedToken } = useContext(AuthContext); // Get the user, logout, and getDecodedToken from AuthContext\r\n\r\n  const decodedToken = getDecodedToken();\r\n  const isAdmin = decodedToken?.IsAdmin === \"true\"; // Check if IsAdmin is \"true\" in the decoded token\r\n\r\n  console.log(\"from navbar: \" + isAdmin);\r\n\r\n  return (\r\n    <>\r\n      <nav className=\"p-4 bg-gray-100\">\r\n        <ul className=\"flex space-x-4\">\r\n          <li>\r\n            <Link to=\"/\" className=\"text-blue-500\">\r\n              Home\r\n            </Link>\r\n          </li>\r\n          {user ? (\r\n            <>\r\n              {isAdmin && (\r\n                <>\r\n                  <li>\r\n                    <Link to=\"/user-dashboard\" className=\"text-blue-500\">\r\n                      User Dashboard\r\n                    </Link>\r\n                  </li>\r\n                  <li>\r\n                    <Link to=\"/admin-dashboard\" className=\"text-blue-500\">\r\n                      Admin Dashboard\r\n                    </Link>\r\n                  </li>\r\n                </>\r\n              )}\r\n              <li>\r\n                <Link to=\"/user-dashboard\" className=\"text-blue-500\">\r\n                  User Dashboard\r\n                </Link>\r\n              </li>\r\n              <li>\r\n                <Link to=\"/user-dashboard\" className=\"text-blue-500\">\r\n                  Profile\r\n                </Link>\r\n              </li>\r\n              <li>\r\n                <button onClick={logout} className=\"text-red-500\">\r\n                  Log Out\r\n                </button>\r\n              </li>\r\n            </>\r\n          ) : (\r\n            <li>\r\n              <Link to=\"/login\" className=\"text-blue-500\">\r\n                Log In\r\n              </Link>\r\n            </li>\r\n          )}\r\n        </ul>\r\n      </nav>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n"],"mappings":"AAAA;AACA,MAAO,CAAAA,KAAK,EAAIC,UAAU,KAAQ,OAAO,CACzC,OAASC,IAAI,KAAQ,kBAAkB,CACvC,OAASC,WAAW,KAAQ,wBAAwB,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,QAAA,IAAAC,SAAA,CAAAC,IAAA,IAAAC,KAAA,yBAErD,KAAM,CAAAC,MAAM,CAAGA,CAAA,GAAM,CACnB,KAAM,CAAEC,IAAI,CAAEC,MAAM,CAAEC,eAAgB,CAAC,CAAGZ,UAAU,CAACE,WAAW,CAAC,CAAE;AAEnE,KAAM,CAAAW,YAAY,CAAGD,eAAe,CAAC,CAAC,CACtC,KAAM,CAAAE,OAAO,CAAG,CAAAD,YAAY,SAAZA,YAAY,iBAAZA,YAAY,CAAEE,OAAO,IAAK,MAAM,CAAE;AAElDC,OAAO,CAACC,GAAG,CAAC,eAAe,CAAGH,OAAO,CAAC,CAEtC,mBACEV,IAAA,CAAAE,SAAA,EAAAY,QAAA,cACEd,IAAA,QAAKe,SAAS,CAAC,iBAAiB,CAAAD,QAAA,cAC9BV,KAAA,OAAIW,SAAS,CAAC,gBAAgB,CAAAD,QAAA,eAC5Bd,IAAA,OAAAc,QAAA,cACEd,IAAA,CAACH,IAAI,EAACmB,EAAE,CAAC,GAAG,CAACD,SAAS,CAAC,eAAe,CAAAD,QAAA,CAAC,MAEvC,CAAM,CAAC,CACL,CAAC,CACJR,IAAI,cACHF,KAAA,CAAAF,SAAA,EAAAY,QAAA,EACGJ,OAAO,eACNN,KAAA,CAAAF,SAAA,EAAAY,QAAA,eACEd,IAAA,OAAAc,QAAA,cACEd,IAAA,CAACH,IAAI,EAACmB,EAAE,CAAC,iBAAiB,CAACD,SAAS,CAAC,eAAe,CAAAD,QAAA,CAAC,gBAErD,CAAM,CAAC,CACL,CAAC,cACLd,IAAA,OAAAc,QAAA,cACEd,IAAA,CAACH,IAAI,EAACmB,EAAE,CAAC,kBAAkB,CAACD,SAAS,CAAC,eAAe,CAAAD,QAAA,CAAC,iBAEtD,CAAM,CAAC,CACL,CAAC,EACL,CACH,cACDd,IAAA,OAAAc,QAAA,cACEd,IAAA,CAACH,IAAI,EAACmB,EAAE,CAAC,iBAAiB,CAACD,SAAS,CAAC,eAAe,CAAAD,QAAA,CAAC,gBAErD,CAAM,CAAC,CACL,CAAC,cACLd,IAAA,OAAAc,QAAA,cACEd,IAAA,CAACH,IAAI,EAACmB,EAAE,CAAC,iBAAiB,CAACD,SAAS,CAAC,eAAe,CAAAD,QAAA,CAAC,SAErD,CAAM,CAAC,CACL,CAAC,cACLd,IAAA,OAAAc,QAAA,cACEd,IAAA,WAAQiB,OAAO,CAAEV,MAAO,CAACQ,SAAS,CAAC,cAAc,CAAAD,QAAA,CAAC,SAElD,CAAQ,CAAC,CACP,CAAC,EACL,CAAC,cAEHd,IAAA,OAAAc,QAAA,cACEd,IAAA,CAACH,IAAI,EAACmB,EAAE,CAAC,QAAQ,CAACD,SAAS,CAAC,eAAe,CAAAD,QAAA,CAAC,QAE5C,CAAM,CAAC,CACL,CACL,EACC,CAAC,CACF,CAAC,CACN,CAAC,CAEP,CAAC,CAED,cAAe,CAAAT,MAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}