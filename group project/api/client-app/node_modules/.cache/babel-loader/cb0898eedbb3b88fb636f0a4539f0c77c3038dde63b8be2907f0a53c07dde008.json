{"ast":null,"code":"import React,{useState,useEffect}from\"react\";import Settings from\"../../Components/admConfig/Settings\";import SettingsService from\"../../Services/settingsService\";import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";function AdminDashboard(){const[selectedRoom,setSelectedRoom]=useState(null);const[view,setView]=useState(\"admin\");const[currentSettings,setCurrentSettings]=useState(null);useEffect(()=>{if(selectedRoom){loadSettings(selectedRoom.id);}},[selectedRoom]);const loadSettings=async roomId=>{try{const settings=await SettingsService.getSettings(roomId);setCurrentSettings(settings);}catch(error){console.error(\"Failed to load settings:\",error);}};const handleSave=async settings=>{console.log(\"Passed settings Settings:\",settings);const formattedTimeSlots=settings.timeSlots.map(slot=>({startTime:new Date(slot.startTime).toLocaleTimeString('en-GB',{hour12:false}),endTime:new Date(slot.endTime).toLocaleTimeString('en-GB',{hour12:false})}));const formattedSettings={maxBookingsPerUser:settings.maxBooking,timeSlots:formattedTimeSlots,laundryMachines:settings.laundryMachines.map(machine=>({machineName:machine.name,machineType:machine.type})),allowShowUserInfo:settings.allowShowUserInfo};console.log(\"Formatted Settings:\",formattedSettings);// For debugging\ntry{await SettingsService.saveSettings(selectedRoom.id,formattedSettings);alert(\"Settings saved successfully!\");}catch(error){alert(\"Failed to save settings.\");}};//placeholder data to be passed on constructor\nconst laundryRooms=[{id:1,name:\"Vestre Ringgade 218\",address:\"Vestre Ringgade 218, 8000 Aarhus, Danmark\"},{id:2,name:\"TelefonTorvet 2B\",address:\"TelefonTorvet 2B, 8000 Aarhus, Danmark\"},{id:3,name:\"Hasle Ringgade\",address:\"Hasle Ringgade 47, 8000 Aarhus, Danmark\"}];const users=[{id:1234,apartment:\"4TH\",lastLoggedin:\"12/09\"},{id:1234,apartment:\"2TV\",lastLoggedin:\"09/09\"},{id:1234,apartment:\"1ST\",lastLoggedin:\"08/07\"}];const handleRoomSelect=room=>{setSelectedRoom(room);setView(\"admin\");};return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsxs(\"div\",{className:\"flex h-screen\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"w-1/4 bg-gray-100 p-4\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"text-xl font-bold mb-4\",children:\"Laundry Rooms\"}),/*#__PURE__*/_jsx(\"ul\",{children:laundryRooms.map(room=>/*#__PURE__*/_jsxs(\"li\",{className:`p-2 cursor-pointer ${(selectedRoom===null||selectedRoom===void 0?void 0:selectedRoom.id)===room.id?\"bg-teal-500 text-white\":\"\"}`,onClick:()=>handleRoomSelect(room),children:[/*#__PURE__*/_jsx(\"div\",{children:room.name}),/*#__PURE__*/_jsx(\"div\",{children:\"Id: \"+room.id})]},room.id))})]}),/*#__PURE__*/_jsx(\"div\",{className:\"w-3/4 p-4\",children:selectedRoom?/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(Settings,{settings:currentSettings,selectedRoom:selectedRoom,onSave:handleSave})})}):/*#__PURE__*/_jsx(\"p\",{children:\"Please select a laundry room to manage.\"})})]})});}export default AdminDashboard;","map":{"version":3,"names":["React","useState","useEffect","Settings","SettingsService","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","AdminDashboard","selectedRoom","setSelectedRoom","view","setView","currentSettings","setCurrentSettings","loadSettings","id","roomId","settings","getSettings","error","console","handleSave","log","formattedTimeSlots","timeSlots","map","slot","startTime","Date","toLocaleTimeString","hour12","endTime","formattedSettings","maxBookingsPerUser","maxBooking","laundryMachines","machine","machineName","name","machineType","type","allowShowUserInfo","saveSettings","alert","laundryRooms","address","users","apartment","lastLoggedin","handleRoomSelect","room","children","className","onClick","onSave"],"sources":["C:/Users/sigur/OneDrive/Dokumenter/GitHub/DND-semester-Project/group project/api/client-app/src/Pages/Adm/AdminDashboard.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport Settings from \"../../Components/admConfig/Settings\";\r\nimport SettingsService from \"../../Services/settingsService\";\r\n\r\nfunction AdminDashboard() {\r\n  const [selectedRoom, setSelectedRoom] = useState(null);\r\n  const [view, setView] = useState(\"admin\");\r\n\r\n  const [currentSettings, setCurrentSettings] = useState(null);\r\n\r\n  useEffect(() => {\r\n    if (selectedRoom) {\r\n      loadSettings(selectedRoom.id);\r\n    }\r\n  }, [selectedRoom]);\r\n\r\n  const loadSettings = async (roomId) => {\r\n    try {\r\n      const settings = await SettingsService.getSettings(roomId);\r\n      setCurrentSettings(settings);\r\n    } catch (error) {\r\n      console.error(\"Failed to load settings:\", error);\r\n    }\r\n  };\r\n\r\n  const handleSave = async (settings) => {\r\n\r\nconsole.log(\"Passed settings Settings:\", settings)\r\n\r\nconst formattedTimeSlots = settings.timeSlots.map(slot => ({\r\n  startTime: new Date(slot.startTime).toLocaleTimeString('en-GB', { hour12: false }),\r\n  endTime: new Date(slot.endTime).toLocaleTimeString('en-GB', { hour12: false })\r\n}));\r\n\r\n\r\nconst formattedSettings = {\r\n  maxBookingsPerUser: settings.maxBooking,  \r\n  timeSlots: formattedTimeSlots,            \r\n  laundryMachines: settings.laundryMachines.map(machine => ({\r\n    machineName: machine.name,\r\n    machineType: machine.type\r\n  })),\r\n  allowShowUserInfo: settings.allowShowUserInfo \r\n};\r\n\r\nconsole.log(\"Formatted Settings:\", formattedSettings); // For debugging\r\n\r\n\r\n\r\n    try {\r\n      await SettingsService.saveSettings(selectedRoom.id, formattedSettings);\r\n      alert(\"Settings saved successfully!\");\r\n    } catch (error) {\r\n      alert(\"Failed to save settings.\");\r\n    }\r\n  };\r\n\r\n  //placeholder data to be passed on constructor\r\n  const laundryRooms = [\r\n    {\r\n      id: 1,\r\n      name: \"Vestre Ringgade 218\",\r\n      address: \"Vestre Ringgade 218, 8000 Aarhus, Danmark\",\r\n    },\r\n    {\r\n      id: 2,\r\n      name: \"TelefonTorvet 2B\",\r\n      address: \"TelefonTorvet 2B, 8000 Aarhus, Danmark\",\r\n    },\r\n    {\r\n      id: 3,\r\n      name: \"Hasle Ringgade\",\r\n      address: \"Hasle Ringgade 47, 8000 Aarhus, Danmark\",\r\n    },\r\n  ];\r\n\r\n  const users = [\r\n    {\r\n      id: 1234,\r\n      apartment: \"4TH\",\r\n      lastLoggedin: \"12/09\",\r\n    },\r\n    {\r\n      id: 1234,\r\n      apartment: \"2TV\",\r\n      lastLoggedin: \"09/09\",\r\n    },\r\n    {\r\n      id: 1234,\r\n      apartment: \"1ST\",\r\n      lastLoggedin: \"08/07\",\r\n    },\r\n  ];\r\n\r\n  const handleRoomSelect = (room) => {\r\n    setSelectedRoom(room);\r\n    setView(\"admin\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"flex h-screen\">\r\n        {/* Left Panel - Room List */}\r\n        <div className=\"w-1/4 bg-gray-100 p-4\">\r\n          <h2 className=\"text-xl font-bold mb-4\">Laundry Rooms</h2>\r\n          <ul>\r\n            {laundryRooms.map((room) => (\r\n              <li\r\n                key={room.id}\r\n                className={`p-2 cursor-pointer ${\r\n                  selectedRoom?.id === room.id ? \"bg-teal-500 text-white\" : \"\"\r\n                }`}\r\n                onClick={() => handleRoomSelect(room)}\r\n              >\r\n                <div>{room.name}</div>\r\n                <div>{\"Id: \" + room.id}</div>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n\r\n        {/* Middle Panel - Users or Admin Config */}\r\n        <div className=\"w-3/4 p-4\">\r\n          {selectedRoom ? (\r\n            <>\r\n\r\n              <div>\r\n                <Settings\r\n                  settings={currentSettings}\r\n                  selectedRoom={selectedRoom}\r\n                  onSave={handleSave}\r\n                />\r\n              </div>\r\n\r\n\r\n              \r\n            </>\r\n          ) : (\r\n            <p>Please select a laundry room to manage.</p>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default AdminDashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}